/*
 * DO NOT EDIT THIS FILE - it is generated by Glade.
 */
#ifndef SUPPORT_H
#define SUPPORT_H

#ifdef HAVE_CONFIG_H
#  include <config.h>
#endif

#include <gtk/gtk.h>

/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif

/*
 * Public Functions.
 */

#ifdef __cplusplus
extern "C" {
#endif
	
/*
 * This function returns a widget in a component created by Glade.
 * Call it with the toplevel widget in the component (i.e. a window/dialog),
 * or alternatively any widget in the component, and the name of the widget
 * you want returned.
 */
GtkWidget*  lookup_widget              (GtkWidget       *widget,
                                        const gchar     *widget_name);

/* get_widget() is deprecated. Use lookup_widget instead. */
#define get_widget lookup_widget

/* Use this function to set the directory containing installed pixmaps. */
void        add_pixmap_directory       (const gchar     *directory);


/*
 * Private Functions.
 */

/* This is used to create the pixmaps in the interface. */
GtkWidget*  create_pixmap              (GtkWidget       *widget,
                                        const gchar     *filename);
GtkWidget *create_pixmap_from_data(GtkWidget * widget, gchar ** data);

// This is used to create new cursors.
GdkCursor *newCursorFromXPM(gchar *xpm[],
        gchar blackLetter,GdkColor *blackColor,
        gchar whiteLetter,GdkColor *whiteColor,
        gint xHot,gint yHot);

//GdkColor white = {0,0xFFFF,0xFFFF,0xFFFF};
//GdkColor black = {0,0x0000,0x0000,0x0000};
void create_gdk_pixmap(
	GtkWidget *widget,
	GdkPixmap **pixmap,
	GdkBitmap **mask,
	const gchar * filename
);

void create_gdk_pixmap_from_data(
	GtkWidget *widget,
	GdkPixmap **pixmap,
	GdkBitmap **mask,
	gchar **data
);

#ifdef __cplusplus
}
#endif
#endif
