<!--
This file is part of DARWIN.
Copyright (C) 1994 - 2020

DARWIN is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

DARWIN is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with DARWIN.  If not, see https://www.gnu.org/licenses/
-->
    
<Window x:Class="Darwin.Wpf.CurrentCatalogSchemeWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:Darwin.Wpf.ValueConverters"
        xmlns:features="clr-namespace:Darwin.Features;assembly=Darwin"
        xmlns:local="clr-namespace:Darwin.Wpf"
        mc:Ignorable="d" Background="{StaticResource LightBackground}" WindowStartupLocation="CenterOwner"
        Title="Current Catalog Scheme" Height="450" MinHeight="400" MinWidth="500" Width="600">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:ComparisonConverter x:Key="ComparisonConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Border Grid.Row="0" Margin="10" BorderBrush="LightGray" BorderThickness="1">
            <TextBlock TextWrapping="WrapWithOverflow" Background="White" Padding="10">
            <Run FontWeight="Bold">Note:</Run> The current catalog scheme is the one that's currently being used.  If you want to edit a catalog scheme for a new database,
            use <Run FontWeight="Bold">Catalog Scheme Presets</Run>.
            </TextBlock>
        </Border>
        <Grid Grid.Row="1" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="10"/>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="160" />
                </Grid.ColumnDefinitions>
                <Label HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="0">Feature Set Type:</Label>
                <StackPanel Grid.Column="1" Orientation="Vertical" Margin="0,6,0,0">
                    <RadioButton GroupName="FeatureSetTypeGroup" IsChecked="{Binding Path=SelectedScheme.FeatureSetType, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static features:FeatureSetType.DorsalFin}}">
                        Dolphin Dorsal Fin
                    </RadioButton>
                    <RadioButton GroupName="FeatureSetTypeGroup" IsChecked="{Binding Path=SelectedScheme.FeatureSetType, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static features:FeatureSetType.Bear}}">
                        Bear
                    </RadioButton>
                </StackPanel>
                <StackPanel Grid.Column="2" HorizontalAlignment="Right" Orientation="Vertical">
                    <Button x:Name="RediscoverDatabaseFeatures" Click="RediscoverDatabaseFeatures_Click">Rediscover Features</Button>
                    <Button x:Name="RecomputeEmbeddingsButton" Click="RecomputeEmbeddingsButton_Click" Visibility="{Binding ShowRecomputeEmbeddings, Converter={StaticResource BooleanToVisibilityConverter}}">Re-compute Embeddings</Button>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label Grid.Row="0">Category Names:</Label>
                <ListBox x:Name="ListBox" Grid.Row="1" SelectedItem="{Binding SelectedCategory}" ItemsSource="{Binding SelectedScheme.Categories}" SelectionMode="Single">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="ListBoxItem">
                            <EventSetter Event="PreviewGotKeyboardFocus" Handler="ListBoxItem_SelectCurrentItem"/>
                        </Style>
                    </ListBox.ItemContainerStyle>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <TextBox Margin="0,5,10,5" MinWidth="150" x:Name="CategoryNameTextBox" Text="{Binding Path=Name,Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="10">
                    <Button x:Name="AddCategoryNameButton" Click="AddCategoryNameButton_Click">Add</Button>
                    <Button x:Name="RemoveCategoryNameButton" Click="RemoveCategoryNameButton_Click">Remove</Button>
                    <Button x:Name="UpCategoryNameButton" Click="UpCategoryNameButton_Click">Up</Button>
                    <Button x:Name="DownCategoryNameButton" Click="DownCategoryNameButton_Click">Down</Button>
                </StackPanel>
            </Grid>
        </Grid>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
            <Button x:Name="SaveButton" Click="SaveButton_Click" IsDefault="True">Save</Button>
            <Button x:Name="CancelButton" Click="CancelButton_Click" IsCancel="True">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
