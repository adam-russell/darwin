<Window x:Class="Darwin.Wpf.MatchingWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converters="clr-namespace:Darwin.Wpf.ValueConverters"
        xmlns:matching="clr-namespace:Darwin.Matching;assembly=Darwin"
        xmlns:fe="clr-namespace:Darwin.Wpf.FrameworkElements"
        xmlns:local="clr-namespace:Darwin.Wpf"
        mc:Ignorable="d" Background="{StaticResource LightBackground}" ResizeMode="NoResize"
        WindowStartupLocation="CenterOwner"
        Title="Matching" Height="434" Width="800">
    <Window.Resources>
        <x:Array Type="Brush" x:Key="brushes">
            <x:Static Member="Brushes.Crimson" />
            <x:Static Member="Brushes.Crimson" />
            <x:Static Member="Brushes.Yellow" />
            <x:Static Member="Brushes.Cyan" />
            <x:Static Member="Brushes.Blue" />
            <x:Static Member="Brushes.Magenta" />
        </x:Array>
        <x:Array Type="Brush" x:Key="dbBrushes">
            <x:Static Member="Brushes.Lime" />
            <x:Static Member="Brushes.Crimson" />
            <x:Static Member="Brushes.Yellow" />
            <x:Static Member="Brushes.Cyan" />
            <x:Static Member="Brushes.Blue" />
            <x:Static Member="Brushes.Magenta" />
        </x:Array>
        <converters:ComparisonConverter x:Key="ComparisonConverter" />
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:BooleanToHiddenVisibilityConverter x:Key="BooleanToHiddenVisibilityConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Vertical" Margin="10">
                        <Label>Search ONLY Selected Categories</Label>
                        <ItemsControl Width="440" ItemsSource="{Binding SelectableCategories}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox Width="110" Content="{Binding Name}" IsChecked="{Binding IsSelected}" Margin="0,5,0,0"/>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <Button x:Name="SelectAllCategoriesButton" Click="SelectAllCategoriesButton_Click" Margin="0,0,10,0">
                                Select All
                            </Button>
                            <Button x:Name="ClearAllCategoriesButton" Click="ClearAllCategoriesButton_Click" Margin="0,0,10,0">
                                Clear All
                            </Button>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="10">
                        <StackPanel Orientation="Vertical">
                            <Label>Select a Search Method</Label>
                            <RadioButton GroupName="RegistrationMethod" IsChecked="{Binding Path=RegistrationMethod, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static matching:RegistrationMethodType.TrimFixedPercent}}">
                                Align Quick &amp; Dirty
                            </RadioButton>
                            <RadioButton GroupName="RegistrationMethod" IsChecked="{Binding Path=RegistrationMethod, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static matching:RegistrationMethodType.TrimOptimalTip}}">
                                Align Iteratively
                            </RadioButton>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" Margin="30,0,0,0">
                            <Label>
                                <TextBlock>
                                Range of Points used to compute<LineBreak/>
                                the error for ranking results:<LineBreak/>
                                -- These ONLY affect the<LineBreak/>
                                -- Align Iteratively methods!
                                </TextBlock>
                            </Label>
                            <RadioButton GroupName="RangeOfPoints" IsChecked="{Binding Path=RangeOfPoints, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static matching:RangeOfPointsType.AllPoints}}">
                                All Points
                            </RadioButton>
                            <RadioButton GroupName="RangeOfPoints" IsChecked="{Binding Path=RangeOfPoints, Mode=TwoWay, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static matching:RangeOfPointsType.TrailingEdgeOnly}}">
                                Trailing Edge Only
                            </RadioButton>
                        </StackPanel>
                    </StackPanel>
                </StackPanel>
            </Grid>
            <StackPanel Grid.Column="1" Orientation="Vertical">
                <Label>Registered Outlines</Label>

                <Viewbox>
                    <Grid Visibility="{Binding Path=ShowRegistration, Converter={StaticResource BooleanToHiddenVisibilityConverter}}">
                        <fe:PointVisuals x:Name="UnknownContourVisuals" IsHitTestVisible="False" Width="{Binding ContourWidth}" Height="{Binding ContourHeight}"
                                         Background="Transparent"
                                         PointSize="1"
                                         XOffset="{Binding UnknownContour.XOffset}"
                                         YOffset="{Binding UnknownContour.YOffset}"
                                         ContourScale="{Binding UnknownContour.Scale}"
                                         ItemsSource="{Binding UnknownContour.Points}"     
                                         Brushes="{StaticResource brushes}" />

                        <fe:PointVisuals IsHitTestVisible="False" Width="{Binding ContourWidth}" Height="{Binding ContourHeight}"
                                         Background="Transparent"
                                         PointSize="1"
                                         XOffset="{Binding DBContour.XOffset}"
                                         YOffset="{Binding DBContour.YOffset}"
                                         ContourScale="{Binding DBContour.Scale}"
                                         ItemsSource="{Binding DBContour.Points}"     
                                         Brushes="{StaticResource dbBrushes}" />
                    </Grid>
                </Viewbox>

                <CheckBox IsChecked="{Binding ShowRegistration}" HorizontalAlignment="Center" Margin="0,10,0,2">Show Outline Registration</CheckBox>
            </StackPanel>
        </Grid>
        <ProgressBar Grid.Row="1" Height="20" Minimum="0" Maximum="100" Value="{Binding Path=MatchProgressPercent}" Visibility="{Binding ProgressBarVisibility}" Margin="10,10,10,4"/>
        <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="15">
            <Button x:Name="StartButton" IsDefault="True" Click="StartButton_Click" IsEnabled="{Binding Path=MatchRunning, Converter={StaticResource InverseBooleanConverter}}">Start</Button>
            <Button x:Name="PauseButton" IsEnabled="{Binding Path=MatchRunning}" Click="PauseButton_Click">Pause</Button>
            <Button x:Name="CancelButton" Click="CancelButton_Click">Cancel</Button>
        </StackPanel>
    </Grid>
</Window>
